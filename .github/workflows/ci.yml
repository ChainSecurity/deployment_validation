# .github/workflows/ci.yml
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy
      
      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dependencies
        run: |
          wget -O geth.tgz https://gethstore.blob.core.windows.net/builds/geth-linux-amd64-1.14.5-0dd173a7.tar.gz
          tar -zxvf geth.tgz
          sudo mv geth-linux-amd64-1.14.5-0dd173a7/geth /usr/bin/
          sudo apt clean

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run format task
        run: ./tests/format_test.sh

      - name: Run tests
        env:
          MAINNET_RPC: ${{ secrets.MAINNET_RPC }}
          ETHERSCAN_TEST_API_URL: ${{ secrets.ETHERSCAN_TEST_API_URL }}
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          BLOCKSCOUT_TEST_API_URL: ${{ secrets.BLOCKSCOUT_TEST_API_URL}}
          BLOCKSCOUT_API_KEY: ${{ secrets.BLOCKSCOUT_API_KEY }}
          SIGNER_ADDRESS: ${{ secrets.SIGNER_ADDRESS }}
          SIGNER_SECRET_KEY: ${{ secrets.SIGNER_SECRET_KEY }}
        run: ./tests/ci_tests.sh

      # TODO: Publish to Docker Hub
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: true
      #     tags: user/app:latest
